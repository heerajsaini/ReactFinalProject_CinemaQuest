{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\4thSemProject_REACT\\\\Part2\\\\cinemaquest\\\\src\\\\pages\\\\Starred.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MainPageLayout from '../components/MainPageLayout';\nimport { useShows } from '../misc/custom-hooks';\nimport { apiGet } from '../misc/config';\nimport ShowGrid from '../components/show/ShowGrid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Starred = () => {\n  _s();\n\n  const [starred] = useShows();\n  const [shows, setShows] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (starred && starred.length > 0) {\n      const promises = starred.map(showId => apiGet(`/shows/${showId}`));\n      Promise.all(promises).then(apiData => apiData.map(show => ({\n        show\n      }))).then(results => {\n        setShows(results);\n        setIsLoading(false);\n      }).catch(err => {\n        setError(err.message);\n        setIsLoading(false);\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, [starred]);\n  return /*#__PURE__*/_jsxDEV(MainPageLayout, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Shows are still loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error occured: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), !isLoading && !shows && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No shows were added\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this), !isLoading && !error && shows && /*#__PURE__*/_jsxDEV(ShowGrid, {\n      data: shows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Starred, \"lhYcV0UWcg9R86jSxSfSkV7bSME=\", false, function () {\n  return [useShows];\n});\n\n_c = Starred;\nexport default Starred;\n\nvar _c;\n\n$RefreshReg$(_c, \"Starred\");","map":{"version":3,"names":["React","useState","useEffect","MainPageLayout","useShows","apiGet","ShowGrid","Starred","starred","shows","setShows","isLoading","setIsLoading","error","setError","length","promises","map","showId","Promise","all","then","apiData","show","results","catch","err","message"],"sources":["D:/Projects/4thSemProject_REACT/Part2/cinemaquest/src/pages/Starred.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainPageLayout from '../components/MainPageLayout';\nimport { useShows } from '../misc/custom-hooks';\nimport { apiGet } from '../misc/config';\nimport ShowGrid from '../components/show/ShowGrid';\n\nconst Starred = () => {\n  const [starred] = useShows();\n\n  const [shows, setShows] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (starred && starred.length > 0) {\n      const promises = starred.map(showId => apiGet(`/shows/${showId}`));\n\n      Promise.all(promises)\n        .then(apiData => apiData.map(show => ({ show })))\n        .then(results => {\n          setShows(results);\n          setIsLoading(false);\n        })\n        .catch(err => {\n          setError(err.message);\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, [starred]);\n\n  return (\n    <MainPageLayout>\n      {isLoading && <div>Shows are still loading</div>}\n      {error && <div>Error occured: {error}</div>}\n      {!isLoading && !shows && <div>No shows were added</div>}\n      {!isLoading && !error && shows && <ShowGrid data={shows} />}\n    </MainPageLayout>\n  );\n};\n\nexport default Starred;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,OAAD,IAAYJ,QAAQ,EAA1B;EAEA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACd,IAAIM,OAAO,IAAIA,OAAO,CAACO,MAAR,GAAiB,CAAhC,EAAmC;MACjC,MAAMC,QAAQ,GAAGR,OAAO,CAACS,GAAR,CAAYC,MAAM,IAAIb,MAAM,CAAE,UAASa,MAAO,EAAlB,CAA5B,CAAjB;MAEAC,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACGK,IADH,CACQC,OAAO,IAAIA,OAAO,CAACL,GAAR,CAAYM,IAAI,KAAK;QAAEA;MAAF,CAAL,CAAhB,CADnB,EAEGF,IAFH,CAEQG,OAAO,IAAI;QACfd,QAAQ,CAACc,OAAD,CAAR;QACAZ,YAAY,CAAC,KAAD,CAAZ;MACD,CALH,EAMGa,KANH,CAMSC,GAAG,IAAI;QACZZ,QAAQ,CAACY,GAAG,CAACC,OAAL,CAAR;QACAf,YAAY,CAAC,KAAD,CAAZ;MACD,CATH;IAUD,CAbD,MAaO;MACLA,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAjBQ,EAiBN,CAACJ,OAAD,CAjBM,CAAT;EAmBA,oBACE,QAAC,cAAD;IAAA,WACGG,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADhB,EAEGE,KAAK,iBAAI;MAAA,8BAAqBA,KAArB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFZ,EAGG,CAACF,SAAD,IAAc,CAACF,KAAf,iBAAwB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAH3B,EAIG,CAACE,SAAD,IAAc,CAACE,KAAf,IAAwBJ,KAAxB,iBAAiC,QAAC,QAAD;MAAU,IAAI,EAAEA;IAAhB;MAAA;MAAA;MAAA;IAAA,QAJpC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAlCD;;GAAMF,O;UACcH,Q;;;KADdG,O;AAoCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}